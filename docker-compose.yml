services:
  bot:
    build:
      context: .
      dockerfile: docker/bot/Dockerfile
    container_name: bot
    restart: always
    environment:
      - PYTHONPATH=/app/src
      - BACKEND_SERVER_URL=http://django_app:8000/telegram-auth/
    env_file:
      - .env

  django_app:
    container_name: django_app
    build:
      context: .
      dockerfile: docker/django_app/Dockerfile
      target: dev
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./django_app/src:/app/src
    environment:
      - DJANGO_ENV=dev
      - PYTHONPATH=/app/src
    env_file:
      - .env
    restart: always
    command: [ "/app/entrypoint.sh" ]


  db:
    image: postgres:16.0-alpine
    container_name: db
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 2s
      retries: 5


volumes:
  pgdata: {}
